(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),A=t(645),a=t.n(A)()(r());a.push([n.id,'* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\n:root {\n    --background-light: #FFFFFF;\n    --background-light-grey: #EEEFF2;\n    --background-dark-grey: #E4E5E9;\n\n    --nav-background-hover: #F7F6F7\n}\n\nli {\n    list-style-type: none;\n}\n\nbody {\n    display: flex;\n    font-family: \'Inter\', sans-serif;\n    padding: 40px;\n    padding-right: 0;\n    color: black;\n    background-color: var(--background-light-grey);\n}\n\nh1 {\n    font-size: 2.2rem;\n    padding-bottom: 21px;\n}\n\nh2 {\n    font-weight: 400;\n    padding: 15px 15px 10px 2px;\n}\n\n\n/* HEADER */\nheader  {\n    padding: 37px;\n    height: 90vh;\n    border-radius: 13px;\n    background-color: var(--background-light);\n    width: 25vw;\n}\n\n.default-project {\n    padding: 18px;\n}\n\n.default-project a {\n    text-decoration: none;\n    font-size: 1rem;\n    color: black;\n    font-weight: 500;\n}\n\n\n/* MAIN */\nmain {\n    margin: 20px auto auto;\n    width: 40%;\n    display: flex;\n    flex-direction: column;\n    gap: 13px;\n}\n\n.add-task {\n    display: flex;\n    flex-direction: row-reverse;\n    /* line-height: 1.7; */\n}\n\n.hide {\n    /* background-color: red;\n    color: red; */\n    /* content: \'\'; */\n    position: absolute;   \n    visibility: hidden;\n    margin-right: 7px;\n\n}\n\n\n\n.add-task:focus-within {\n\n    /* color: red; */\n    display: flex;\n    align-items: center;\n\n    padding: 15px;\n    /* margin-bottom: 9px; */\n    background-color: var(--background-light);\n    border-radius: 13px;\n    font-weight: 400;\n    font-size: 0.9rem;\n}\n\n.add-task label {\n    /* margin-right: 7px; */\n}\n\n#input-add-task {\n    padding: 15px;\n    border-radius: 13px;\n    border-style: none;\n    font-family: \'Inter\', sans-serif;\n    width: 100%;\n    background-color: var(--background-dark-grey);\n    font-weight: 300;\n    font-size: 0.9rem;\n    line-height: 1.7;\n}\n\n\n/* after focus */\n#input-add-task:focus {    \n    border-radius: initial;\n    padding: initial;\n    background-color: initial;\n\n    font-family: \'Inter\', sans-serif;\n    font-weight: 400;\n    font-size: 0.9rem;\n\n    border-style: none;\n    outline: none;\n}\n\n\n#input-add-task:focus + label .hide {\n    visibility: visible;\n    /* color: red; */\n    position: relative;\n    /* background-color: red; */\n\n}\n\n\n\n\n\n\n\n.task {\n    padding: 15px;\n    margin-bottom: 9px;\n    background-color: var(--background-light);\n    border-radius: 13px;\n    font-weight: 400;\n    font-size: 0.9rem;\n}\n\n.delete-icon {\n    float: right;\n    position: relative;\n    top: 5px;\n    right: 4px;\n    display: none;\n}\n\n[type="checkbox"] {\n    opacity: 0;\n    position: absolute;\n}\n\n.custom-checkbox {\n    --size: 17px;\n    display: inline-block;\n    width: var(--size);\n    height: var(--size);\n    border: solid 2px currentColor;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: var(--background-light-grey);\n\n    cursor: pointer;\n\n}\n\n.custom-checkbox:after {\n    content: "\\f00c";\n    font-family: "Font Awesome 5 Free";\n    font-weight: 600;\n    font-size: 12px;\n    color: white;\n    margin: 5px;\n    display: none;\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n    background-color: black;\n}\n\n[type="checkbox"]:checked + label .custom-checkbox::after {\n    display: block;\n}\n\n.task label::after {\n    content: \'\';\n    position: absolute;\n    right: 0;\n    left: 24px;\n    height: 2px;\n    background-color: currentColor;\n    transform: scaleX(0);\n    transform-origin: left;\n    transition: transform 160ms ease-in-out;\n} \n\n[type="checkbox"]:checked + label::after {\n    transform: scaleX(1);\n    transform-origin: left;\n}\n\n.task label {\n    display: flex;\n    align-items: center;\n    column-gap: 7px;\n    position: relative;\n    display: inline-flex;\n    line-height: 1.7;\n    cursor: pointer;\n}\n\n/* FOOTER */\nfooter {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 30px;\n    left: 100px;\n    width: 100%;\n}\n\na {\n    color: inherit;\n\n}\n\n.fa-github {\n    margin-left: 4px;\n}\n\n.fa-github:hover {\n    transform: rotate(360deg) scale(1.4);\n    transition: transform 0.3s ease-in-out;\n}\n\n\n/* Hover */\n.default-project:hover {\n    background-color: var(--nav-background-hover);\n    border-radius: 13px;\n}\n\n.task:hover .delete-icon {\n    display: block;\n    cursor: pointer;\n}\n\n/* .custom-checkbox:hover {\n    transform: scale(1.15);\n    transition: transform 200ms ease-in-out;\n} */',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,2BAA2B;IAC3B,gCAAgC;IAChC,+BAA+B;;IAE/B;AACJ;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,gCAAgC;IAChC,aAAa;IACb,gBAAgB;IAChB,YAAY;IACZ,8CAA8C;AAClD;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;IACI,gBAAgB;IAChB,2BAA2B;AAC/B;;;AAGA,WAAW;AACX;IACI,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,yCAAyC;IACzC,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,qBAAqB;IACrB,eAAe;IACf,YAAY;IACZ,gBAAgB;AACpB;;;AAGA,SAAS;AACT;IACI,sBAAsB;IACtB,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,sBAAsB;AAC1B;;AAEA;IACI;iBACa;IACb,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;;AAErB;;;;AAIA;;IAEI,gBAAgB;IAChB,aAAa;IACb,mBAAmB;;IAEnB,aAAa;IACb,wBAAwB;IACxB,yCAAyC;IACzC,mBAAmB;IACnB,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,gCAAgC;IAChC,WAAW;IACX,6CAA6C;IAC7C,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;AACpB;;;AAGA,gBAAgB;AAChB;IACI,sBAAsB;IACtB,gBAAgB;IAChB,yBAAyB;;IAEzB,gCAAgC;IAChC,gBAAgB;IAChB,iBAAiB;;IAEjB,kBAAkB;IAClB,aAAa;AACjB;;;AAGA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;IAClB,2BAA2B;;AAE/B;;;;;;;;AAQA;IACI,aAAa;IACb,kBAAkB;IAClB,yCAAyC;IACzC,mBAAmB;IACnB,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,QAAQ;IACR,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,qBAAqB;IACrB,kBAAkB;IAClB,mBAAmB;IACnB,8BAA8B;IAC9B,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,8CAA8C;;IAE9C,eAAe;;AAEnB;;AAEA;IACI,gBAAgB;IAChB,kCAAkC;IAClC,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,QAAQ;IACR,UAAU;IACV,WAAW;IACX,8BAA8B;IAC9B,oBAAoB;IACpB,sBAAsB;IACtB,uCAAuC;AAC3C;;AAEA;IACI,oBAAoB;IACpB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,oBAAoB;IACpB,gBAAgB;IAChB,eAAe;AACnB;;AAEA,WAAW;AACX;IACI,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,WAAW;AACf;;AAEA;IACI,cAAc;;AAElB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;IACpC,sCAAsC;AAC1C;;;AAGA,UAAU;AACV;IACI,6CAA6C;IAC7C,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;;;GAGG",sourcesContent:['* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\n:root {\n    --background-light: #FFFFFF;\n    --background-light-grey: #EEEFF2;\n    --background-dark-grey: #E4E5E9;\n\n    --nav-background-hover: #F7F6F7\n}\n\nli {\n    list-style-type: none;\n}\n\nbody {\n    display: flex;\n    font-family: \'Inter\', sans-serif;\n    padding: 40px;\n    padding-right: 0;\n    color: black;\n    background-color: var(--background-light-grey);\n}\n\nh1 {\n    font-size: 2.2rem;\n    padding-bottom: 21px;\n}\n\nh2 {\n    font-weight: 400;\n    padding: 15px 15px 10px 2px;\n}\n\n\n/* HEADER */\nheader  {\n    padding: 37px;\n    height: 90vh;\n    border-radius: 13px;\n    background-color: var(--background-light);\n    width: 25vw;\n}\n\n.default-project {\n    padding: 18px;\n}\n\n.default-project a {\n    text-decoration: none;\n    font-size: 1rem;\n    color: black;\n    font-weight: 500;\n}\n\n\n/* MAIN */\nmain {\n    margin: 20px auto auto;\n    width: 40%;\n    display: flex;\n    flex-direction: column;\n    gap: 13px;\n}\n\n.add-task {\n    display: flex;\n    flex-direction: row-reverse;\n    /* line-height: 1.7; */\n}\n\n.hide {\n    /* background-color: red;\n    color: red; */\n    /* content: \'\'; */\n    position: absolute;   \n    visibility: hidden;\n    margin-right: 7px;\n\n}\n\n\n\n.add-task:focus-within {\n\n    /* color: red; */\n    display: flex;\n    align-items: center;\n\n    padding: 15px;\n    /* margin-bottom: 9px; */\n    background-color: var(--background-light);\n    border-radius: 13px;\n    font-weight: 400;\n    font-size: 0.9rem;\n}\n\n.add-task label {\n    /* margin-right: 7px; */\n}\n\n#input-add-task {\n    padding: 15px;\n    border-radius: 13px;\n    border-style: none;\n    font-family: \'Inter\', sans-serif;\n    width: 100%;\n    background-color: var(--background-dark-grey);\n    font-weight: 300;\n    font-size: 0.9rem;\n    line-height: 1.7;\n}\n\n\n/* after focus */\n#input-add-task:focus {    \n    border-radius: initial;\n    padding: initial;\n    background-color: initial;\n\n    font-family: \'Inter\', sans-serif;\n    font-weight: 400;\n    font-size: 0.9rem;\n\n    border-style: none;\n    outline: none;\n}\n\n\n#input-add-task:focus + label .hide {\n    visibility: visible;\n    /* color: red; */\n    position: relative;\n    /* background-color: red; */\n\n}\n\n\n\n\n\n\n\n.task {\n    padding: 15px;\n    margin-bottom: 9px;\n    background-color: var(--background-light);\n    border-radius: 13px;\n    font-weight: 400;\n    font-size: 0.9rem;\n}\n\n.delete-icon {\n    float: right;\n    position: relative;\n    top: 5px;\n    right: 4px;\n    display: none;\n}\n\n[type="checkbox"] {\n    opacity: 0;\n    position: absolute;\n}\n\n.custom-checkbox {\n    --size: 17px;\n    display: inline-block;\n    width: var(--size);\n    height: var(--size);\n    border: solid 2px currentColor;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: var(--background-light-grey);\n\n    cursor: pointer;\n\n}\n\n.custom-checkbox:after {\n    content: "\\f00c";\n    font-family: "Font Awesome 5 Free";\n    font-weight: 600;\n    font-size: 12px;\n    color: white;\n    margin: 5px;\n    display: none;\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n    background-color: black;\n}\n\n[type="checkbox"]:checked + label .custom-checkbox::after {\n    display: block;\n}\n\n.task label::after {\n    content: \'\';\n    position: absolute;\n    right: 0;\n    left: 24px;\n    height: 2px;\n    background-color: currentColor;\n    transform: scaleX(0);\n    transform-origin: left;\n    transition: transform 160ms ease-in-out;\n} \n\n[type="checkbox"]:checked + label::after {\n    transform: scaleX(1);\n    transform-origin: left;\n}\n\n.task label {\n    display: flex;\n    align-items: center;\n    column-gap: 7px;\n    position: relative;\n    display: inline-flex;\n    line-height: 1.7;\n    cursor: pointer;\n}\n\n/* FOOTER */\nfooter {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    bottom: 30px;\n    left: 100px;\n    width: 100%;\n}\n\na {\n    color: inherit;\n\n}\n\n.fa-github {\n    margin-left: 4px;\n}\n\n.fa-github:hover {\n    transform: rotate(360deg) scale(1.4);\n    transition: transform 0.3s ease-in-out;\n}\n\n\n/* Hover */\n.default-project:hover {\n    background-color: var(--nav-background-hover);\n    border-radius: 13px;\n}\n\n.task:hover .delete-icon {\n    display: block;\n    cursor: pointer;\n}\n\n/* .custom-checkbox:hover {\n    transform: scale(1.15);\n    transition: transform 200ms ease-in-out;\n} */'],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&a[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},a=[],i=0;i<n.length;i++){var s=n[i],c=o.base?s[0]+o.base:s[0],l=A[c]||0,d="".concat(c," ").concat(l);A[c]=l+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var g=r(p,o);o.byIndex=i,e.splice(i,0,{identifier:d,updater:g,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<A.length;a++){var i=t(A[a]);e[i].references--}for(var s=o(n,r),c=0;c<A.length;c++){var l=t(A[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),A=t(569),a=t.n(A),i=t(565),s=t.n(i),c=t(216),l=t.n(c),d=t(589),u=t.n(d),p=t(426),g={};function f(){let n=localStorage.getItem("tasks"),e=[];return e=null==n?[]:JSON.parse(n),e}function B(){let n=document.querySelectorAll(".task-lists li input"),e=document.querySelectorAll(".task-lists li label");Array.from(n).forEach((function(n,e){n.id=`task-${e}`})),Array.from(e).forEach((function(n,e){n.removeAttribute("for"),n.setAttribute("for",`task-${e}`)}))}function C(){document.querySelectorAll(".delete-icon").forEach((n=>{n.addEventListener("click",(()=>{n.parentElement.remove(),function(n){let e=localStorage.getItem("tasks"),t=[];t=null==e?[]:JSON.parse(e),t.splice(n,1),localStorage.setItem("tasks",JSON.stringify(t))}(f().indexOf(n.previousElementSibling.textContent.trim()))}))}))}g.styleTagTransform=u(),g.setAttributes=s(),g.insert=a().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=l(),e()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals,function(){const n=document.querySelector("#input-add-task");n.addEventListener("keypress",(function(e){if("Enter"===e.key&&""!=n.value){!function(n){let e=localStorage.getItem("tasks"),t=[];t=null==e?[]:JSON.parse(e),t.push(n),localStorage.setItem("tasks",JSON.stringify(t))}(n.value);let e=`\n                    <input type="checkbox" id="task-1">\n                    <label for="task-1">\n                        <span class="custom-checkbox"></span>\n                        ${f().pop()}\n                    </label>\n                    <i class="fa-solid fa-xmark delete-icon"></i>\n                `,t=document.querySelector(".task-lists"),o=document.createElement("li");o.classList.add("task"),o.innerHTML=e,t.prepend(o),B(),n.value="",C()}}))}(),f().forEach((function(n,e){let t=`\n            <input type="checkbox" id="task-1">\n            <label for="task-1">\n                <span class="custom-checkbox"></span>\n                ${n}\n            </label>\n            <i class="fa-solid fa-xmark delete-icon" ></i>\n        `,o=document.querySelector(".task-lists"),r=document.createElement("li");r.classList.add("task"),r.innerHTML=t,o.prepend(r),B()})),C()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,